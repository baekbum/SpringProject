<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!--
		url에 들어오는 모든 요청은 @Controller 어노테이션이 붙은 클래스의 @RequestMapping 어노테이션의 내용을
		검색해서 메소드를 실행하지만 예외적으로 아래와 같이 resources의 mapping 속성과 같이 요청이 들어오면 
		@Controller 어노테이션이 붙은 클래스의 @RequestMapping 어노테이션의 내용을 검색하지 않고 location 속성의
		경로를 검색한다. ==> 이미지, *.css, *.js 파일이 위치한 경로를 지정하려는 경우 사용한다. 
	-->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/WEB-INF/views/images/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!--
		컨트롤러의 @RequestMapping 어노테이션이 붙은 메소드가 return 시키는 값 앞에 prefix 속성의 내용이
		return 시키는 값 뒤에 suffix 속성의 내용이 붙어 뷰 페이지의 경로가 된다.
		@RequestMapping 어노테이션이 붙은 메소드가 "home"을 return 시켰다면 아래와 같이 처리된다.
		"/WEB-INF/views/" + "home" + ".jsp" ==> /WEB-INF/views/home.jsp
	-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!--
		base-package 속성에서 지정된 패키지의 클래스 중에서 @Controller 어노테이션이 붙은 클래스가 컨트롤러
		클래스로 사용된다.
	-->
	<context:component-scan base-package="kr.koreait.springMVCSample_0821" />
	
	
	
</beans:beans>
